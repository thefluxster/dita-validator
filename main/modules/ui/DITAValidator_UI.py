#!/usr/bin/env python
import os
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Jan  7 17:43:07 2010

import wx

# begin wxGlade: extracode
# end wxGlade



class SimpleFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SimpleFrame.__init__
        kwds["style"] = wx.CAPTION|wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.MAXIMIZE_BOX|wx.SYSTEM_MENU|wx.RESIZE_BORDER|wx.TAB_TRAVERSAL|wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        self.sizerOptions_staticbox = wx.StaticBox(self, -1, "Options")
        self.sizerMsgReport_staticbox = wx.StaticBox(self, -1, "Message Report")
        self.sizerInputOutput_staticbox = wx.StaticBox(self, -1, "Input and Output")
        self.frame_1_statusbar = self.CreateStatusBar(1, 0)
        self.label_5 = wx.StaticText(self, -1, "Process by:")
        self.choiceInputType = wx.Choice(self, -1, choices=["DITA Map", "Directory"])
        self.label_1 = wx.StaticText(self, -1, "DTD Catalog:")
        self.labelInput = wx.StaticText(self, -1, "DITA Map:")
        self.label_3 = wx.StaticText(self, -1, "Output Folder:")
        self.text_ctrlCatalog = wx.TextCtrl(self, -1, "dtds/catalog-dita.xml")
        self.text_ctrlDITAMap = wx.TextCtrl(self, -1, "")
        self.text_ctrlOutput = wx.TextCtrl(self, -1, "")
        self.buttonBrowseCatalog = wx.Button(self, -1, "Browse...")
        self.buttonBrowseDITAMap = wx.Button(self, -1, "Browse...")
        self.buttonBrowseOutput = wx.Button(self, -1, "Browse...")
        self.label_4 = wx.StaticText(self, -1, "File Encoding:")
        self.combo_boxEncoding = wx.ComboBox(self, -1, choices=["utf-8", "utf-16"], style=wx.CB_DROPDOWN|wx.CB_DROPDOWN|wx.CB_READONLY)
        self.panel_2 = wx.Panel(self, -1)
        self.checkboxRemoveLF = wx.CheckBox(self, -1, "Remove extra line feeds")
        self.checkboxGenPropFile = wx.CheckBox(self, -1, "Generate properties file")
        self.checkboxCleanNestedTCs = wx.CheckBox(self, -1, "Clean nested tracked\nchanges")
        self.checkboxTrimIXTermSpaces = wx.CheckBox(self, -1, "Delete extra spaces from\n<indexterms>")
        self.checkboxInsertIXSortAs = wx.CheckBox(self, -1, "Insert <index-sort-as>\nelements")
        self.checkboxAcceptTCs = wx.CheckBox(self, -1, "Tracked Changes:\nAccept All")
        self.checkboxMoveUISpaces = wx.CheckBox(self, -1, "For <uicontrol> and <cite>,\nmove spaces outside tags")
        self.checkboxDelMenuCSpacs = wx.CheckBox(self, -1, "Delete spaces from\n<menucascade>")
        self.panel_1 = wx.Panel(self, -1)
        self.text_ctrlMessageReport = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.HSCROLL)
        self.labelVersion = wx.StaticText(self, -1, "Version: ")
        self.buttonStart = wx.Button(self, -1, "&Start")
        self.buttonReset = wx.Button(self, -1, "&Reset")
        self.buttonHelp = wx.Button(self, wx.ID_HELP, "")
        self.buttonQuit = wx.Button(self, wx.ID_EXIT, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHOICE, self.OnInputType, self.choiceInputType)
        self.Bind(wx.EVT_BUTTON, self.OnBrowseCatalog, self.buttonBrowseCatalog)
        self.Bind(wx.EVT_BUTTON, self.OnBrowseDITAMap, self.buttonBrowseDITAMap)
        self.Bind(wx.EVT_BUTTON, self.OnBrowseOutput, self.buttonBrowseOutput)
        self.Bind(wx.EVT_BUTTON, self.OnStart, self.buttonStart)
        self.Bind(wx.EVT_BUTTON, self.OnReset, self.buttonReset)
        self.Bind(wx.EVT_BUTTON, self.OnHelp, self.buttonHelp)
        self.Bind(wx.EVT_BUTTON, self.OnExit, self.buttonQuit)
        # end wxGlade
        self.UserOptions()
        
        
    def __set_properties(self):
        # begin wxGlade: SimpleFrame.__set_properties
        self.SetTitle("DITAValidator")
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["Ready"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.choiceInputType.SetToolTipString("Choose to process based on a single ditamap or a folder and all sub-content.")
        self.choiceInputType.SetSelection(0)
        self.label_1.SetToolTipString("To test XML validity, a DITA Catalog must be provided along with a set of DTDs.  All encountered ditamaps and DITA XML files will be validated using the provided DTDs.")
        self.labelInput.SetToolTipString("All files referenced by the map or sub-topics and maps will be processed.")
        self.label_3.SetToolTipString("Original folders and files will be copied here after processing.  If left blank, processing will occur on files in place without creating a backup.")
        self.label_3.Enable(False)
        self.text_ctrlOutput.Enable(False)
        self.buttonBrowseOutput.Enable(False)
        self.label_4.Enable(False)
        self.combo_boxEncoding.Enable(False)
        self.combo_boxEncoding.SetSelection(0)
        self.panel_2.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.checkboxRemoveLF.Enable(False)
        self.checkboxGenPropFile.Enable(False)
        self.checkboxCleanNestedTCs.Enable(False)
        self.checkboxTrimIXTermSpaces.Enable(False)
        self.checkboxInsertIXSortAs.Enable(False)
        self.checkboxAcceptTCs.Enable(False)
        self.checkboxMoveUISpaces.Enable(False)
        self.checkboxDelMenuCSpacs.Enable(False)
        self.panel_1.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        # end wxGlade
        
                                       
    def __do_layout(self):
        # begin wxGlade: SimpleFrame.__do_layout
        sizerMainDialog = wx.BoxSizer(wx.VERTICAL)
        sizerMainBtns = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizerMsgReport = wx.StaticBoxSizer(self.sizerMsgReport_staticbox, wx.HORIZONTAL)
        sizerOptions = wx.StaticBoxSizer(self.sizerOptions_staticbox, wx.HORIZONTAL)
        grid_sizerOptions = wx.GridSizer(4, 3, 0, 0)
        sizerInputOutput = wx.StaticBoxSizer(self.sizerInputOutput_staticbox, wx.HORIZONTAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_3 = wx.GridSizer(3, 1, 0, 0)
        grid_sizer_2 = wx.GridSizer(3, 1, 0, 0)
        grid_sizer_1 = wx.GridSizer(4, 1, 0, 0)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_6.Add(self.label_5, 0, wx.ALL|wx.ALIGN_BOTTOM, 2)
        sizer_6.Add(self.choiceInputType, 0, wx.ALL|wx.EXPAND, 2)
        sizer_13.Add(sizer_6, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.labelInput, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.label_3, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_13.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(self.text_ctrlCatalog, 0, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        grid_sizer_2.Add(self.text_ctrlDITAMap, 0, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        grid_sizer_2.Add(self.text_ctrlOutput, 0, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizer_13.Add(grid_sizer_2, 2, wx.EXPAND, 0)
        grid_sizer_3.Add(self.buttonBrowseCatalog, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        grid_sizer_3.Add(self.buttonBrowseDITAMap, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        grid_sizer_3.Add(self.buttonBrowseOutput, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizer_13.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        sizerInputOutput.Add(sizer_13, 1, wx.EXPAND, 0)
        sizerMainDialog.Add(sizerInputOutput, 0, wx.EXPAND, 0)
        grid_sizerOptions.Add(self.label_4, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.combo_boxEncoding, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.panel_2, 1, wx.EXPAND, 0)
        grid_sizerOptions.Add(self.checkboxRemoveLF, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxGenPropFile, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxCleanNestedTCs, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxTrimIXTermSpaces, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxInsertIXSortAs, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxAcceptTCs, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxMoveUISpaces, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.checkboxDelMenuCSpacs, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizerOptions.Add(self.panel_1, 1, wx.EXPAND, 0)
        sizerOptions.Add(grid_sizerOptions, 1, wx.EXPAND, 0)
        sizerMainDialog.Add(sizerOptions, 0, wx.EXPAND, 0)
        sizerMsgReport.Add(self.text_ctrlMessageReport, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 2)
        sizerMainDialog.Add(sizerMsgReport, 8, wx.EXPAND, 0)
        sizer_1.Add(self.labelVersion, 0, wx.ALL|wx.ALIGN_BOTTOM, 2)
        sizerMainBtns.Add(sizer_1, 4, wx.ALL|wx.EXPAND, 2)
        sizer_2.Add(self.buttonStart, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizerMainBtns.Add(sizer_2, 0, wx.ALL|wx.EXPAND, 2)
        sizer_3.Add(self.buttonReset, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizerMainBtns.Add(sizer_3, 0, wx.ALL|wx.EXPAND, 2)
        sizer_4.Add(self.buttonHelp, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizerMainBtns.Add(sizer_4, 0, wx.ALL|wx.EXPAND, 2)
        sizer_5.Add(self.buttonQuit, 1, wx.ALL|wx.EXPAND|wx.FIXED_MINSIZE, 2)
        sizerMainBtns.Add(sizer_5, 0, wx.ALL|wx.EXPAND, 2)
        sizerMainDialog.Add(sizerMainBtns, 0, wx.EXPAND, 0)
        self.SetSizer(sizerMainDialog)
        sizerMainDialog.Fit(self)
        self.Layout()
        # end wxGlade

    def OnBrowseCatalog(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnBrowseCatalog' not implemented!"
        event.Skip()

    def OnBrowseDITAMap(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnBrowseDITAMap' not implemented!"
        event.Skip()

    def OnBrowseOutput(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnBrowseOutput' not implemented!"
        event.Skip()

    def OnStart(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnStart' not implemented!"
        event.Skip()

    def OnReset(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnReset' not implemented!"
        event.Skip()

    def OnHelp(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnHelp' not implemented!"
        event.Skip()

    def OnExit(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnExit' not implemented!"
        event.Skip()
    
    def UserOptions(self):
        pass
    def OnInputType(self, event): # wxGlade: SimpleFrame.<event_handler>
        print "Event handler `OnInputType' not implemented"
        event.Skip()

# end of class SimpleFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = SimpleFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
